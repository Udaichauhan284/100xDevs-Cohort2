## Week 11 | Serverless Backends
-- What are backends Servers?
You might have used express to create a Backend server.
The way to run it usually is "node index.js" which starts a process on a certain port (3000 for example)

When you have to deploy it on the internet, there are a few ways-
1. Go to AWS, GCP, Azure, Cloudfare
a. rent a Virtual machine and deloy your app,
b. put it in an auto scaling group
c. deploy it in a Kubernetes cluster,

There are a few downsides to during this -
1. taking care of how/when to scale
2. base cost even if no one is visting your website
3. monitoring various servers to make sure no server is down.

## What are serverless Backends
"Serverless" is a backend deployment in which the "cloud provider" dynamically manages the allocation and provisioning of servers. The term "serverless" doesn't mean there are no servers involved. Instead, it means that developers and operators do not have to worry about the servers.

-- What if you could just write your "express routes" and run a command. The app would automatically.
1. Deploy
2. Autoscale
3. Change you on a "per request" basis (rather than you paying for VMs)

-- Problems:
1. more expensive at scale.
2. cold start problem.

-- Famous Serverless providers
there are many famous backend serverless providers -
1. AWS lambda
2. Google CLoud Functions
3. Cloudflare Workers

-- When should you use a serverless architecture?
a. when you have to get off the ground fast and dont want to worry about deployements.
b. When you cant anticipate the traffic and dont want to worry about autoscalling.
c. If you have very low traffic and want to optimize the cost.

-- How cloudflare workers work?
- Cloudflare workers DONT use the nodejs runtime. They have created thier own runtime.

- How Workers Works
Though Cloudfare Workers Behave similarlt to JS in the browser or in NodeJS, there are a few difference in how yohave to think about your code. Under the hood, the Workers runtime uses the "V8 engine" - the same engine used by Chromium and NOdejs. The workers runtimw also implements many of the standard API available in most modern browsers.

The difference between JS writtem for the browser or NOdejs happen at runtime. Rather than running on an individual's machine. Wrokers function run on Cloudfare Edge Network - a growing global network of thousands of machines distributed accross hundreds of locations.

Each of these machines hosts and instances of the workers runtime, and each of these runtimes is capable of running thousands of user-defines application.

-- Isolates vs Containers
- Isolates
V8 orchestrates isolates: lightweight contexts that provide your code wit variables it can access and a safe enivroment to be executed within. You could even consider an isolate a sandbox for your function to run in.

A single runtime can run hundreds or thousands of isolates, seamlessly switching between them. Each isolates memory is completely isolated. so each piece of code is protected from other untrusted or user written code on the runtime. 
Isolate are designed to start very quickly.
Instead of creating a virtual machine of each function, an isolate is created within an existing enivronment. This model eliminates the cold starts of the virtual machine model.

### AWS Development, starting on 21 Mar
Ques. What is AWS
Amazon's Cloud Service.
It let's you
1.Rent Servers
2.Manage domains
3.Upload objects(mp4 files, jpgs, mp3..)
4.Autoscale servers
5.Create k8s clusters.

# -> EC2 Servers
VM-(Virtual Machines) on AWS are called EC2 servers.
- EC2 stands for Elastic compute Version 2.
1. Elastic - can increase/decrease the size of the machine.
2. Compute = It's a machine.
you can spin up a new EC2 instance from the aws dashboard.

SSH - Secure Shell

Step 4. SSH into server
1. Give ssh key permissions
chmod 700 kirat-class.pem

2. ssh into machine
ssh -i kirat-class.pem ubuntu@ec2-65-0180-32.op-south-1.compute.amazonaws.com

3. clone repo
git clone https://github.com/hkirat/sum-server

4. install Node js
https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-20-04
Option 3. -- Second command line.
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash


5. Install all dependencies.
cd sum-server
npm install

6. start backend
node index.js

Step 5 - Install the repo
clone the repo
https://github.com/hkirat/sum-server

Step 6 - Try hitting the server

Step 7 - nginx - Reverse Proxy
## Learn about NGINX - youtube.
nginx is open source software for web serving, reverse proxying, caching, load balancing, media streaming, an more it started out as web server designes for maximum performance and stability, in addition to its HTTP server capabilities, NGINX can also function as a prozy server for email (MAP,POP3 and SMTP), and a reverse proxy and load balance for HTTP, TCP and UDP servers.

Installing nginx
sudo opt update
sudo opt install nginx
This should start a nginx server on port 80

Create reverse proxy
sudo rm sudo vi /etc/nginx/nginx.conf
sudo vi /etc/nginx/nginx.conf

events {
    # Event directives...
}

http {
	server {
    listen 80;
    server_name be1.100xdevs.com;

    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
	}
}
sudo nginx -s reload

Start the backed server
node index.js

Vist the website
https://be1.100xdevs.com/

Step 8 = Certificate Management
Use https://certbot.eff.org/